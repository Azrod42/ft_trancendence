version: '3.8'
# -=-=-=-=-=-=-=-=-=-=VOLUMES=-=-=-=-=-=-=-=-=-=-
volumes:
  data:
# -=-=-=-=-=-=-=-=-=-=NETWORKS=-=-=-=-=-=-=-=-=-=-
networks:
  backend:
    ipam:
      config:
        - subnet: 172.22.0.0/16
services:
  # -=-=-=-=-=-=-=-=-=-=FRONTEND=-=-=-=-=-=-=-=-=-=-
  front:
    volumes:
      - ./frontend:/app
    build:
      context: ./frontend
      dockerfile: ./front.dockerfile
    container_name: frontend
    ports:
      - "3000:3000"
    restart: unless-stopped
    networks:
      - backend
    depends_on:
      - back
  # -=-=-=-=-=-=-=-=-=-=BACKEND=-=-=-=-=-=-=-=-=-=-
  back:
    volumes:
       - ./backend:/app
    build:
      context: ./backend
      dockerfile: ./back.dockerfile
    container_name: backendD
    ports:
      - "4000:4000"
      - "4042:4042"
    env_file:
      - ./backend/.env
    restart: unless-stopped
    networks:
      - backend
    depends_on:
      - postgres
  # # -=-=-=-=-=-=-=-=-=-=POSTGRES=-=-=-=-=-=-=-=-=-=-
  postgres:
       image: postgres:15-alpine
       container_name: postgres
       ports:
         - 5432:5432
       volumes:
         - data:/var/lib/postgresql/data
         - ./init.sql:/docker-entrypoint-initdb.d/init.sql
       environment:
         - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
         - POSTGRES_USER=${POSTGRES_USER}
         - POSTGRES_DB=${POSTGRES_DB}
       restart: unless-stopped
       networks:
         backend:
           ipv4_address: 172.22.0.10
  # # -=-=-=-=-=-=-=-=-=-=PGADMIN=-=-=-=-=-=-=-=-=-=-
  pgadmin:
    image: dpage/pgadmin4
    restart: unless-stopped
    container_name: nest-pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - '5050:80'
    depends_on:
      - postgres
    networks:
      - backend
